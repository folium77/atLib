{"version":3,"sources":["index.js"],"names":["React","require","ReactDOM","GetTheCategory","data","categories","x","y","forEach","category","parent","Object","assign","children","map","createElement","class","href","concat","id","name","count","this","props","renderCategories","Component","Content","_this","_Applications_MAMP_htdocs_atlib_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Applications_MAMP_htdocs_atlib_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Applications_MAMP_htdocs_atlib_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","books","value","cotegory","urlParams","URLSearchParams","window","location","search","get","fetch","booksRes","json","booksJson","categoriesRes","categoriesJson","setState","fetchData","e","target","fn","isbn","ndl","preventDefault","_this2","Fragment","onSubmit","doSubmit","type","placeholder","onChange","doChange","book","index","src","cover","alt","title","author","author_kana","publisher","pub_date","render","document","getElementById"],"mappings":"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","file":"static/js/main.9746c176.chunk.js","sourcesContent":["var React = require('react');\nvar ReactDOM = require('react-dom');\n\nclass GetTheCategory extends React.Component{\n\n  renderCategories (data) {\n    const categories = [];\n\n    let x = 0;\n    let y = 0;\n    data.forEach(category => {\n      if (category.parent === -1) {\n        categories[x] = Object.assign(category, {children:[]});;\n        x++;\n        y = 0;\n      } else {\n        categories[x-1]['children'][y] = category;\n        y++;\n      }\n    });\n\n    const list = categories.map(category => {\n      return (\n        <li class=\"col\">\n          <a href={`?category=${category.id}`}>{category.name}</a>（{category.count}）\n          <ul>\n            {category.children.map(category =>\n              <li class=\"col\"><a href={`?category=${category.id}`}>{category.name}</a>（{category.count}）</li>\n            )}\n          </ul>\n        </li>\n      )\n    });\n\n    return list;\n\n  };\n\n  render() {\n    const categories = this.props.categories;\n    return (\n      <div class=\"categories\">\n        {this.renderCategories(categories)}\n      </div>\n    )\n  }\n\n}\n\nclass Content extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      categories: [],\n      value: ''\n    };\n  }\n\n  async fetchData(cotegory) {\n    const urlParams = new URLSearchParams(window.location.search);\n    const category = urlParams.get('category');\n    const booksRes = await fetch(`/api/?get=books&category=${category}`);\n    const booksJson = await booksRes.json();\n    const categoriesRes = await fetch('/api/?get=categories');\n    const categoriesJson = await categoriesRes.json();\n\n    this.setState({\n      books: booksJson,\n      categories: categoriesJson\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  doChange (e) {\n    this.setState({ value: e.target.value })\n  }\n\n  // handleClick (e, cotegory) {\n  //   e.preventDefault();\n  //   const pageUrl = `category=${cotegory}`;\n  //   window.history.pushState('', '', pageUrl);\n  //   onClick={(e) => this.handleClick(e, category.id)}\n  // }\n\n  async doSubmit (e, fn, isbn, ndl) {\n    e.preventDefault();\n    if (fn === 'post') {\n      const testRes = await fetch(`/post/?isbn=${this.state.value}`);\n    } else {\n      const testRes = await fetch(`/delete/?isbn=${isbn}&ndl=${ndl}`);\n    }\n    this.fetchData();\n  }\n\n  render(){\n    const books = this.state.books;\n    const categories = this.state.categories;\n    return(\n      <React.Fragment>\n        <form onSubmit={e => this.doSubmit(e, 'post')}>\n          <input type=\"text\"\n            name=\"isbn\"\n            placeholder=\"ISBNを入力してください\"\n            onChange={e => this.doChange(e)}\n            value={this.state.value} />\n          <input type=\"submit\" />\n        </form>\n        <div class=\"books\">\n          <ul>\n            {books.map((book, index) =>\n              <li class=\"col\">\n                <figure class=\"col-cover\">\n                  <img src={book.cover} alt={book.title} />\n                </figure>\n                <div class=\"text-left\">\n                  <p class=\"col-title\">{book.title}</p>\n                  <p class=\"col-class\">NDC：{book.ndl}／{book.category}</p>\n                  <p class=\"col-author\">{book.author}<span class=\"col-author__kana\">／{book.author_kana}</span></p>\n                  <p class=\"col-publisher\">出版社：{book.publisher}</p>\n                  <p class=\"col-pubdate\">発売日：{book.pub_date}</p>\n                  <div>\n                    <form onSubmit={e => this.doSubmit(e, 'delete', book.isbn, book.ndl)}>\n                      <button>DELETE</button>\n                    </form>\n                  </div>\n                </div>\n              </li>\n            )}\n          </ul>\n        </div>\n        <GetTheCategory categories={this.state.categories} />\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(<Content />, document.getElementById(\"content\"))"],"sourceRoot":""}