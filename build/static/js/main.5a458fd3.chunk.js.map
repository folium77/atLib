{"version":3,"sources":["index.js"],"names":["React","require","ReactDOM","GetTheCategory","data","parents","children","categories","forEach","category","index","id","parent","push","array","Object","assign","filter","val","i","map","createElement","class","href","concat","name","count","this","props","renderCategories","Component","Content","_this","_Applications_MAMP_htdocs_atlib_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Applications_MAMP_htdocs_atlib_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Applications_MAMP_htdocs_atlib_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","books","value","cotegory","urlParams","URLSearchParams","window","location","search","get","fetch","booksRes","json","booksJson","categoriesRes","categoriesJson","setState","fetchData","e","target","fn","isbn","ndl","preventDefault","_this2","Fragment","onSubmit","doSubmit","type","placeholder","onChange","doChange","book","src","cover","alt","title","author","author_kana","publisher","pub_date","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a458fd3.chunk.js","sourcesContent":["var React = require('react');\nvar ReactDOM = require('react-dom');\n\nclass GetTheCategory extends React.Component{\n\n  renderCategories (data) {\n    const parents = [];\n    const children = [];\n    const categories = [];\n\n    data.forEach((category, index) => {\n      const id = category.id;\n      if (category.parent === -1) {\n        parents.push(category);\n      } else {\n        children.push(category);\n      }\n    });\n\n    parents.forEach(category => {\n      const id = category.id;\n      const array = Object.assign(category, {children:[]});\n      const child = children.filter(val => val.parent === id);\n      child.forEach((val, i) =>{\n        array['children'][i] = val;\n      });\n      categories.push(array);\n    });\n\n    const list = categories.map(category => {\n      return (\n        <li class=\"col\">\n          <a href={`?category=${category.id}`}>{category.name}</a>（{category.count}）\n          <ul>\n            {category.children.map(category =>\n              <li class=\"col\"><a href={`?category=${category.id}`}>{category.name}</a>（{category.count}）</li>\n            )}\n          </ul>\n        </li>\n      )\n    });\n\n    return list;\n\n  };\n\n  render() {\n    const categories = this.props.categories;\n    return (\n      <div class=\"categories\">\n        {this.renderCategories(categories)}\n      </div>\n    )\n  }\n\n}\n\nclass Content extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      categories: [],\n      value: ''\n    };\n  }\n\n  async fetchData(cotegory) {\n    const urlParams = new URLSearchParams(window.location.search);\n    const category = urlParams.get('category');\n    const booksRes = await fetch(`/api/?get=books&category=${category}`);\n    const booksJson = await booksRes.json();\n    const categoriesRes = await fetch('/api/?get=categories');\n    const categoriesJson = await categoriesRes.json();\n\n    this.setState({\n      books: booksJson,\n      categories: categoriesJson\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  doChange (e) {\n    this.setState({ value: e.target.value })\n  }\n\n  // handleClick (e, cotegory) {\n  //   e.preventDefault();\n  //   const pageUrl = `category=${cotegory}`;\n  //   window.history.pushState('', '', pageUrl);\n  //   onClick={(e) => this.handleClick(e, category.id)}\n  // }\n\n  async doSubmit (e, fn, isbn, ndl) {\n    e.preventDefault();\n    if (fn === 'post') {\n      const testRes = await fetch(`/post/?isbn=${this.state.value}`);\n    } else {\n      const testRes = await fetch(`/delete/?isbn=${isbn}&ndl=${ndl}`);\n    }\n    this.fetchData();\n  }\n\n  render(){\n    const books = this.state.books;\n    const categories = this.state.categories;\n    return(\n      <React.Fragment>\n        <form onSubmit={e => this.doSubmit(e, 'post')}>\n          <input type=\"text\"\n            name=\"isbn\"\n            placeholder=\"ISBNを入力してください\"\n            onChange={e => this.doChange(e)}\n            value={this.state.value} />\n          <input type=\"submit\" />\n        </form>\n        <div class=\"books\">\n          <ul>\n            {books.map((book, index) =>\n              <li class=\"col\">\n                <figure class=\"col-cover\">\n                  <img src={book.cover} alt={book.title} />\n                </figure>\n                <div class=\"text-left\">\n                  <p class=\"col-title\">{book.title}</p>\n                  <p class=\"col-class\">NDC：{book.ndl}／{book.category}</p>\n                  <p class=\"col-author\">{book.author}<span class=\"col-author__kana\">／{book.author_kana}</span></p>\n                  <p class=\"col-publisher\">出版社：{book.publisher}</p>\n                  <p class=\"col-pubdate\">発売日：{book.pub_date}</p>\n                  <div>\n                    <form onSubmit={e => this.doSubmit(e, 'delete', book.isbn, book.ndl)}>\n                      <button>DELETE</button>\n                    </form>\n                  </div>\n                </div>\n              </li>\n            )}\n          </ul>\n        </div>\n        <GetTheCategory categories={this.state.categories} />\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(<Content />, document.getElementById(\"content\"))"],"sourceRoot":""}