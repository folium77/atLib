{"version":3,"sources":["index.js"],"names":["React","require","ReactDOM","Content","props","_this","Object","_Applications_MAMP_htdocs_atlib_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Applications_MAMP_htdocs_atlib_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Applications_MAMP_htdocs_atlib_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","books","categories","value","cotegory","urlParams","URLSearchParams","window","location","search","category","get","fetch","concat","booksRes","json","booksJson","categoriesRes","categoriesJson","setState","fetchData","e","target","fn","isbn","ndl","preventDefault","_this2","createElement","Fragment","onSubmit","doSubmit","type","name","placeholder","onChange","doChange","class","map","book","index","src","cover","alt","title","author","author_kana","publisher","pub_date","href","id","count","Component","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3a7cf3d.chunk.js","sourcesContent":["var React = require('react');\nvar ReactDOM = require('react-dom');\n\nclass Content extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      categories: [],\n      value: ''\n    };\n  }\n\n  async fetchData(cotegory) {\n    const urlParams = new URLSearchParams(window.location.search);\n    const category = urlParams.get('category');\n    const booksRes = await fetch(`/api/?get=books&category=${category}`);\n    const booksJson = await booksRes.json();\n    const categoriesRes = await fetch('/api/?get=categories');\n    const categoriesJson = await categoriesRes.json();\n\n    this.setState({\n      books: booksJson,\n      categories: categoriesJson\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  doChange (e) {\n    this.setState({ value: e.target.value })\n  }\n\n  // handleClick (e, cotegory) {\n  //   e.preventDefault();\n  //   const pageUrl = `category=${cotegory}`;\n  //   window.history.pushState('', '', pageUrl);\n  //   onClick={(e) => this.handleClick(e, category.id)}\n  // }\n\n  async doSubmit (e, fn, isbn, ndl) {\n    e.preventDefault();\n    if (fn === 'post') {\n      const testRes = await fetch(`/post/?isbn=${this.state.value}`);\n    } else {\n      const testRes = await fetch(`/delete/?isbn=${isbn}&ndl=${ndl}`);\n    }\n    this.fetchData();\n  }\n\n  render(){\n    const books = this.state.books;\n    const categories = this.state.categories;\n    return(\n      <React.Fragment>\n        <form onSubmit={e => this.doSubmit(e, 'post')}>\n          <input type=\"text\"\n            name=\"isbn\"\n            placeholder=\"ISBNを入力してください\"\n            onChange={e => this.doChange(e)}\n            value={this.state.value} />\n          <input type=\"submit\" />\n        </form>\n        <div class=\"books\">\n          <ul>\n            {books.map((book, index) =>\n              <li class=\"col\">\n                <figure class=\"col-cover\">\n                  <img src={book.cover} alt={book.title} />\n                </figure>\n                <div class=\"text-left\">\n                  <p class=\"col-title\">{book.title}</p>\n                  <p class=\"col-class\">NDC：{book.ndl}／{book.category}</p>\n                  <p class=\"col-author\">{book.author}<span class=\"col-author__kana\">／{book.author_kana}</span></p>\n                  <p class=\"col-publisher\">出版社：{book.publisher}</p>\n                  <p class=\"col-pubdate\">発売日：{book.pub_date}</p>\n                  <div>\n                    <form onSubmit={e => this.doSubmit(e, 'delete', book.isbn, book.ndl)}>\n                      <button>DELETE</button>\n                    </form>\n                  </div>\n                </div>\n              </li>\n            )}\n          </ul>\n        </div>\n        <div class=\"categories\">\n          <ul>\n            <li class=\"col\"><a href=\"/\">すべて</a></li>\n            {categories.map((category, index) =>\n              <li class=\"col\"><a href={`?category=${category.id}`}>{category.name}</a>（{category.count}）</li>\n            )}\n          </ul>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(<Content />, document.getElementById(\"content\"))"],"sourceRoot":""}